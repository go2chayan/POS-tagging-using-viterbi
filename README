README
======

I did it as a part of homework problem in the Statistical Speech and Language Processing course taught by 
Prof Daniel Gildea (https://www.cs.rochester.edu/~gildea/) in Fall 2015. Here I implemented a Viterbi decoder
for a Parts of Speech (POS) tagging problem. A Hidden Markov Model is assumed to be pretrained and its emmission and
transition weights are given (as log-probability) in the train.weights file. Upon obtaining a new sentence,
this program calculates the most likely POS tags for the sentence.
==========================================================================================================

Name: Md. Iftekhar Tanveer
Email: itanveer@cs.rochester.edu  or  mtanveer@z.rochester.edu
Course: CS448
Homework 1: Implement the viterbi decoder using data and weights given in /u/cs448/data/pos. 
			What is your accuracy on the test file?


************** Files ***************
README: This document
alltags: List of all the tags. It can be generated by calling the method "savealltags" from hw1.py
hw1.py: The original python script. main function included. doesn't take any argument
problemtestCase: Used in unit test
test:............... Data files (Not included but assumed to exist in the same folder)
train.weights:...... (as above)

************* Algorithm ************
As described in class. Please check 
the inline comments in the code

************* Results **************
Total Words = 56537.0
Correctly tagged = 49718.0
accuracy= 87.9388718892%

************* Note *****************
I've noticed that there are a few tags with regular expression patterns "-[A-Z]+-" in the data.
I'm not sure what these tags mean. These appear along with some other tags. I have just ommitted
those patterns and used only the first tag for the corresponding word.

I'm not sure what the first number in each line of the test file imply. I just ignored it.